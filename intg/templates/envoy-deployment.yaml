apiVersion: v1
data:
  envoy.yaml: |-
    admin:
      access_log_path: /dev/stdout
      address:
        socket_address:
          protocol: TCP
          address: 127.0.0.1
          port_value: 8090
    static_resources:
      listeners:
        - name: listener_0
          address:
            socket_address:
              protocol: TCP
              address: 0.0.0.0
              port_value: 8443
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    access_log:
                      - name: envoy.access_loggers.stdout
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                    codec_type: AUTO
                    stat_prefix: ingress_https
                    # [START grpc_gke_nlb_tutorial_envoy_route_config]
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains:
                            - "*"
                          routes:
                          {{ $replicas1 := .Values.replicaCount}}
                          {{ $shards1 := .Values.shardCount}}
                          {{ range $k, $v := until ( $shards1 | int) }}
                          {{ range $k1, $v1 := until ( $replicas1 | int) }}
                            - match:
                                prefix: "/jet/{{$k}}/{{$k1}}"
                              route:
                                cluster: jet-{{$k}}-{{$k1}}-grpc
                          {{end}}
                          {{end}}
                    # [END grpc_gke_nlb_tutorial_envoy_route_config]
                    http_filters:
                      - name: envoy.filters.http.health_check
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.health_check.v3.HealthCheck
                          pass_through_mode: false
                          headers:
                            - name: ":path"
                              exact_match: "/healthz"
                            - name: "x-envoy-livenessprobe"
                              exact_match: "healthz"
                      - name: envoy.filters.http.router
                        typed_config:
                          "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              transport_socket:
                name: envoy.transport_sockets.tls
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
                  require_client_certificate: false
                  common_tls_context:
                    tls_certificates:
                      - certificate_chain:
                          filename: /etc/ssl/envoy/tls.crt
                        private_key:
                          filename: /etc/ssl/envoy/tls.key
      # [START grpc_gke_nlb_tutorial_envoy_cluster_echo]
      clusters:
      {{ $replicas := .Values.replicaCount}}
      {{ $shards := .Values.shardCount}}
      {{ range $k, $v := until ( $shards | int) }}
      {{ range $k1, $v1 := until ( $replicas | int) }}
        - name: jet-{{$k}}-{{$k1}}-grpc
          connect_timeout: 0.5s
          type: STRICT_DNS
          dns_lookup_family: V4_ONLY
          lb_policy: ROUND_ROBIN
          http2_protocol_options: { }
          load_assignment:
            cluster_name: jet-{{$k}}-{{$k1}}-grpc
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: jet-shard-{{$k}}-{{$k1}}.jet-service.jet-stream.svc.cluster.local
                          port_value: 8080
          health_checks:
            timeout: 1s
            interval: 10s
            unhealthy_threshold: 2
            healthy_threshold: 2
            grpc_health_check: { }
        {{end}}
        {{end}}
kind: ConfigMap
metadata:
  name: envoy-conf-t9dt957m74
  namespace: jet-stream
---
apiVersion: v1
kind: Service
metadata:
  name: envoy
  namespace: jet-stream
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app: envoy
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy
  namespace: jet-stream
spec:
  replicas: 2
  selector:
    matchLabels:
      app: envoy
  template:
    metadata:
      labels:
        app: envoy
    spec:
      nodeSelector:
        kubernetes.io/arch: arm64
      containers:
      - image: envoyproxy/envoy:v1.24.0@sha256:9ae6b26d14ce92f67cd500cb3e5a89aa3351e013140f8b06c36619d929687ce0
        name: envoy
        ports:
        - containerPort: 8443
          name: https
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: x-envoy-livenessprobe
              value: healthz
            path: /healthz
            port: https
            scheme: HTTPS
        resources:
          requests:
            cpu: 10m
            ephemeral-storage: 256Mi
            memory: 256Mi
        volumeMounts:
        - mountPath: /etc/envoy
          name: config
        - mountPath: /etc/ssl/envoy
          name: certs
      volumes:
      - configMap:
          name: envoy-conf-t9dt957m74
        name: config
      - name: certs
        secret:
          secretName: envoy-certs
