syntax = "proto3";

option go_package = "github.com/Kapperchino/jet/proto";

service Example {
  rpc PublishMessages(PublishMessageRequest) returns (PublishMessageResponse) {}
  rpc CreateConsumer(CreateConsumerRequest) returns (CreateConsumerResponse) {}
  rpc Consume(ConsumeRequest) returns (ConsumeResponse) {}
  rpc CreateTopic(CreateTopicRequest) returns (CreateTopicResponse) {}
}

message PublishMessageRequest {
  string topic = 1;
  int64 partition = 2;
  repeated KeyVal messages = 3;
}

message PublishMessageResponse {
  repeated Message messages = 1;
  int64 lastIndex = 2;
}

message ScaleTopicRequest {
  string topic = 1;
  int64 partitions = 2;
}

message ScaleTopicResponse {
  int64 lastIndex = 1;
}

message CreateTopicRequest {
  string topic = 1;
  int64 numPartitions = 2;
}

message CreateTopicResponse {
}

message CreateConsumerRequest {
  string topic = 1;
}

message CreateConsumerResponse {
  int64 consumerId = 1;
  int64 lastIndex = 2;
}

message ConsumeRequest {
  string topic = 1;
  int64 consumerId = 2;
}

message ConsumeResponse {
  repeated Message messages = 1;
  int64 lastIndex = 2;
}

message Message {
  bytes key = 1;
  bytes payload = 2;
  string topic = 3;
  int64 partition = 4;
  int64 offset = 5;
  uint64 raftIndex = 6;
}

enum Operation {
  PUBLISH = 0;
  CONSUME = 1;
  CREATE_CONSUMER = 2;
  CREATE_TOPIC = 3;
}

message KeyVal {
  bytes key = 1;
  bytes val = 2;
}

message Publish {
  string topic = 1;
  repeated KeyVal messages = 2;
}

message PublishResult {
  repeated Message messages = 1;
}

message Consume {
  string topic = 1;
  int64 id = 2;
}

message ConsumeResult {
  repeated Message messages = 1;
}

message CreateConsumer{
  string topic = 1;
}

message CreateConsumerResult{
}

message CreateTopic{
  string topic = 1;
  int64 partitions = 2;
}

message CreateTopicResult{
}

message Write {
  oneof operation {
    Publish publish = 1;
    Consume consume = 2;
    CreateConsumer createConsumer = 3;
    CreateTopic createTopic = 4;
  }
}

message WriteResult {
  oneof result {
    PublishResult publishResult = 1;
    ConsumeResult consumeResult = 2;
    CreateConsumerResult createConsumerResult = 3;
    CreateTopicResult createTopicResult = 4;
  }
}

message Snapshot {

}
