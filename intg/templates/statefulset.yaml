{{ $replicas := .Values.replicaCount}}
{{ range $k, $v := until ( .Values.shardCount | int) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jet-shard-{{$v}}
  namespace: jet-stream
spec:
  selector:
    matchLabels:
      app: jet # has to match .spec.template.metadata.labels
  serviceName: "jet-service"
  replicas: {{$replicas}}  # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: jet # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: jet-pod
          image: "us-east4-docker.pkg.dev/pelagic-pod-378704/dev/jet:0.10"
          imagePullPolicy: IfNotPresent
          args:
            - --raft_data_dir
            - /usr/share/jet
            - --root_node
            - jet-shard-0-0.jet-service.jet-stream.svc.cluster.local:8081
            - --shard_id
            - shard-{{$v}}
          ports:
            - containerPort: 8080
              name: web
            - containerPort: 8081
              protocol: UDP
              name: gossip-udp
            - containerPort: 8081
              protocol: TCP
              name: gossip-tcp
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          livenessProbe:
            grpc:
              port: 8080
          readinessProbe:
            grpc:
              port: 8080
          volumeMounts:
            - name: jet-volume
              mountPath: /tmp/jet-volume
              readOnly: false
      volumes:
        - name: jet-volume
          persistentVolumeClaim:
            claimName: jet-volume-claim
{{ end }}